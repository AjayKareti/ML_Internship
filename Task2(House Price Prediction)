# Import necessary Libraries
import pandas as pd
import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, confusion_matrix, roc_auc_score
import matplotlib.pyplot as plt
# Load the dataset
df=pd.read_csv("C:\CC\Housing.csv")
df
# Prepare the data
X = df.drop(['price'], axis=1)
y = df['price']
X
y
# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, train_size=0.2, random_state=42)
# Train the logistic regression model
model = LogisticRegression()
model.fit(X_train, y_train)
# Evaluate the model
y_pred = model.predict(X_test)
# Display the Predicted prices
y_pred
actual_prices=np.array(df["price"])
# Display the actual prices
actual_prices
# Plot a graph
plt.plot(actual_prices,label='Actual Prices')
plt.plot(y_pred,label='Predicted Prices')
# Add axis labels and title
plt.ylabel('Predicted Prices')
plt.xlabel('Actual Prices')
plt.title('Actual Vs Predicted Prices')
# Add legend and grid
plt.legend()
plt.grid(True)
# Display the plot
plt.show()
# Calculate accuracy score
accuracy = accuracy_score(y_test, y_pred)
print("Accuracy:", accuracy)
# Calculate confusion matrix
cm = confusion_matrix(y_test, y_pred)
print("Confusion Matrix:\n", cm)
# Display the training and Test scores
print("Training set score:{:.3f}".format(model.score(X_train,y_train)))
print("Test set score:{:.3f}".format(model.score(X_test,y_test)))
