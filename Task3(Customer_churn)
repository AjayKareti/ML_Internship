#import necessary Libraries
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder, OneHotEncoder
from sklearn.tree import DecisionTreeClassifier
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

# Read Data
data = pd.read_csv("C:/CC/churn.csv")
data
# Identify categorical features
categorical_cols = data.select_dtypes(include=['object']).columns.tolist()
# create an Object for LabelEncoder for categorical columns
label_encoder = LabelEncoder()
for col in categorical_cols:
    data[col] = label_encoder.fit_transform(data[col])
# Split data into X and y
X = data.drop(['Churn'], axis=1)
y = data['Churn']
y
# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
# create and train the decision tree classifier
model = DecisionTreeClassifier(random_state=42)
model.fit(X_train, y_train)
# Make predictions on the test data set
y_pred = model.predict(X_test)
y_pred
# Evaluate the model
accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy of Decision Tree Classifier: {accuracy:.3f}")
# some more evaluation metrics
print("\nClassification Report:")
print(classification_report(y_test, y_pred))
# some more evaluation metrics
print("\nClassification Report:")
print(classification_report(y_test, y_pred))
