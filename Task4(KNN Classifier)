#import necessary Libraries 
from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
import numpy as np
import pandas as pd
from sklearn.neighbors import KNeighborsClassifier

# Load dataset (replace with your own)
from sklearn.datasets import load_iris
iris = load_iris()
X = iris.data
y = iris.target

#import necessary Libraries 
from sklearn.neighbors import KNeighborsClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
import numpy as np
import pandas as pd
from sklearn.neighbors import KNeighborsClassifier

# Load dataset (replace with your own)
from sklearn.datasets import load_iris
iris = load_iris()
X = iris.data
y = iris.target

# Split dataset into train and test sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.3, random_state=10)

X

y

# Create KNN classifier model with k=3
knn = KNeighborsClassifier(n_neighbors=3)

# Fit the model on the training set
knn.fit(X_train, y_train)


# Predict classes on the test set
y_pred = knn.predict(X_test)

y_pred

# Evaluate accuracy
accuracy = accuracy_score(y_test, y_pred)
print(f"Accuracy: {accuracy}")

print("Training set score:{:.3f}".format(knn.score(X_train,y_train)))
print("Test set score:{:.3f}".format(knn.score(X_test,y_test)))



