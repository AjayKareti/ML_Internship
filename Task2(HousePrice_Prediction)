# import required libraries
import pandas as pd
import numpy as np
from sklearn.linear_model import LinearRegression
from sklearn.model_selection import train_test_split
import matplotlib.pyplot as plt

# Load the dataset
df=pd.read_csv("C:\CC\houselog.csv")
df
# Preprocessing steps
df['Brick'].replace('Yes', 1, inplace=True)
df['Brick'].replace('No', 0, inplace=True)

df.drop(['Neighborhood'], axis=1, inplace=True)
# Prepare the data
X = df.drop(['Price'], axis=1)
y = df['Price']
# Scaling the data
from sklearn.preprocessing import StandardScaler
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)
X
y
# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.3, random_state=2)
#train the model
lin_reg=LinearRegression()
lin_reg.fit(X_train,y_train)
# Evaluate the model
y_pred = lin_reg.predict(X_test)
y_pred
actual_prices=np.array(df["Price"])
actual_prices

#plot a graph
plt.plot(actual_prices,label='Actual Prices')
plt.plot(y_pred,label='Predicted Prices')
# add axis labels and title
plt.ylabel('Predicted Prices')
plt.xlabel('Actual Prices')
plt.title('Actual Vs Predicted Prices')
#Add legend and grid
plt.legend()
plt.grid(True)
# display the plot
plt.show()

print("Training set score:{:.3f}".format(lin_reg.score(X_train,y_train)))
print("Test set score:{:.3f}".format(lin_reg.score(X_test,y_test)))
